{"version":3,"sources":["types/board/board.ts","components/Atoms/CalenderChangeMenu.tsx","utils/date.ts","components/Atoms/CalenderMonth.tsx","components/Molecules/CalenderDateList.tsx","components/Atoms/CustomButton.tsx","components/Atoms/PopMenu.tsx","components/Molecules/CalenderBoxList.tsx","components/Atoms/CustomTextField.tsx","components/Atoms/Steps/StepOne.tsx","components/Atoms/Steps/StepThree.tsx","components/Atoms/Steps/StepTwo.tsx","components/Molecules/CalenderStepper.tsx","components/Organisms/CalenderAddDrawer.tsx","components/Organisms/CalenderDeleteDialog.tsx","components/Molecules/CalenderModal.tsx","components/Atoms/DatePlate.tsx","components/Molecules/CalenderPlate.tsx","components/Organisms/Calender.tsx","components/Atoms/CanvasGraph.tsx","components/Atoms/GraphHeader.tsx","components/Molecules/GraphWidget.tsx","types/home/types.tsx","components/Molecules/Widget.tsx","components/Organisms/HomeCardList.tsx","components/Organisms/AddDialog.tsx","components/Molecules/Board/CustomBoard.tsx","components/Molecules/Board/CustomCard.tsx","components/Molecules/Board/DraggableListItem.tsx","components/Molecules/Board/DraggableList.tsx","components/Organisms/DroppableBoard.tsx","components/Atoms/DrawerMenu.tsx","components/Organisms/HomeDrawer.tsx","components/Atoms/CustomBreadcrumbs.tsx","components/Atoms/CustomChip.tsx","components/Molecules/Menu.tsx","components/Organisms/Header.tsx","components/Template/Template.tsx","App.tsx","reportWebVitals.ts","types/theme.ts","index.tsx"],"names":["tempData","todo","id","name","boardStyle","width","height","backgroundColor","cardStyle","data","title","subTitle","content","progress","complete","useStyle","makeStyles","theme","button","props","color","palette","primary","main","alignItems","justifyContent","display","borderColor","dark","CalenderChangeMenu","classes","React","useState","Date","date","setDate","handleChange","useCallback","utils","DateFnsUtils","autoOk","variant","inputVariant","format","InputAdornmentProps","position","value","onChange","className","dateList","monthList","getCurrentMonthByDate","month","year","getMonth","getCalenderDateList","Array","from","fill","firstDay","getFullYear","getFirstDay","lastDay","getLastDay","current","days","push","getDate","getCurrentMonthList","before","length","getDay","list","i","getTime","getBeforeMonthList","after","getAfterMonthList","j","pop","isCurrent","shift","getFormattedDate","slice","font","fontFamily","fontStyle","fontWeight","paddingBottom","CalenderMonth","Grid","container","justify","Typography","dateTitle","CalenderDateList","direction","Object","values","map","index","item","defaultProps","text","CustomButton","Button","startIcon","isIcon","icon","type","isSubmit","onClick","label","useStyles","deleteIcon","editIcon","menuItem","light","PopMenu","open","anchorEl","isEdit","isDelete","onClose","onOpenDelete","MenuItem","cardArea","marginTop","borderRadius","ListItemArea","background","paper","secondary","CalenderBoxList","lists","onDelete","anchorElement","setAnchorElement","handleClick","event","console","log","currentTarget","handleClose","Paper","elevation","List","style","padding","ListItem","ListItemText","ListItemSecondaryAction","IconButton","edge","Boolean","textField","input","CustomTextField","TextField","fullWidth","isFullWidth","InputProps","isDate","StepOne","setTitle","target","body","StepThree","startDate","endDate","StepTwo","setStartDate","setEndDate","isStart","margin","createStyles","StepArea","step","stepIcon","stepIconText","getStepContent","CalenderStepper","steps","onComplete","activeStep","setActiveStep","handleStep","isNext","prev","Stepper","orientation","Step","StepButton","root","StepLabel","StepContent","xs","paperAnchorBottom","flexWrap","borderTopLeftRadius","borderTopRightRadius","CalenderAddDrawer","Drawer","anchor","modal","CalenderDeleteDialog","Dialog","maxWidth","PaperProps","CalenderModal","drawerOpen","setDrawerOpen","dialogOpen","setDialogOpen","handleDrawerClose","handleDialogClose","datePlate","borderWidth","borderStyle","cursor","plate","grey","DatePlate","setOpen","Box","CalenderPlate","Fragment","rowDateList","columnIndex","dData","rowIndex","dateName","Calender","alignContent","CanvasGraph","canvas","ctx","numberOfHorizontalGuides","horizontalGuides","precision","verticalGuides","tension","isClosed","numOfSegments","FONT_SIZE","showPoints","maximumXFromData","Math","max","e","x","maximumYFromData","y","digits","parseFloat","toString","toFixed","chartWidth","chartHeight","points","flatMap","element","canvasRef","createRef","drawAxis","beginPath","strokeStyle","moveTo","lineTo","stroke","drawCurve","ptsa","pts","lineWidth","drawLines","t1x","t2x","t1y","t2y","c1","c2","c3","c4","st","t","_pts","res","unshift","pow","getCurvePoints","useEffect","getContext","drawXAxis","maximumX","fillStyle","fillText","drawLabelsXAxis","PARTS","maximumY","_","yCoordinate","String","drawLabelsYAxis","startX","endX","drawHorizontalGuides","ref","headTitle","hint","labelOne","labelTwo","ColoredLine","border","GraphHeader","dateformat","currentDate","marginRight","card","divider","GraphWidget","Card","Divider","flexItem","defaultHomeCardObject","Todo","Progress","Complete","Total","Widget","CardContent","homeCard","HomeCardList","entries","dialog","AddDialog","onAddMemo","addState","setAddState","onChangeValue","key","newMemo","onSubmit","preventDefault","DialogTitle","DialogContent","board","Number","floatingButton","CustomBoard","children","Fab","aria-label","cardContent","paddingLeft","CustomCard","size","DraggableListItem","provided","snapshop","innerRef","draggableProps","dragHandleProps","DraggableList","snapshot","droppableProps","el","draggableId","placeholder","DroppableBoard","setBoard","memo","memoData","uuidv4","toLowerCase","concat","onDragEnd","result","source","destination","droppableId","sourceData","destinationData","splice","moveData","onDragUpdate","initial","listData","menu","right","DrawerMenu","fontSize","drawer","spacing","userInfo","currentActivity","HomeDrawer","user","isOpen","setUserState","Avatar","gutterBottom","CustomBreadcrumbs","Breadcrumbs","CustomChipElement","withStyles","Chip","CustomChip","Menu","to","textDecoration","Header","Template","default","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultTheme","createMuiTheme","overrides","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","day","dayDisabled","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f85a8674.chunk.js","sourcesContent":["import { CardStyleProps } from '../card/card';\r\nimport { MemoData } from '../memo/memo';\r\n\r\nexport type BoardObject = {\r\n  id: string;\r\n  name: string;\r\n  data: MemoData[];\r\n  cardStyle: CardStyleProps;\r\n  boardStyle: BoardStyleProps;\r\n};\r\n\r\nexport type Board = {\r\n  [todo: string]: BoardObject;\r\n};\r\n\r\nexport type BoardStyleProps = {\r\n  backgroundColor?: string;\r\n  width?: string;\r\n  height?: string;\r\n};\r\n\r\nexport const tempData = {\r\n  todo: {\r\n    id: '1',\r\n    name: 'Todo',\r\n    boardStyle: {\r\n      width: '452',\r\n      height: '865',\r\n      backgroundColor: '#E1C3F0',\r\n    },\r\n    cardStyle: { width: '392', height: '112', backgroundColor: '#CE97E8' },\r\n    data: [\r\n      { id: '001', title: 'Study React', subTitle: 'VirtualDom', content: 'test' },\r\n      { id: '002', title: 'Move To Seoul', subTitle: 'buy Bus Ticket', content: 'test2' },\r\n      { id: '003', title: 'Buy Food', subTitle: 'Buy Some Eggs', content: 'test3' },\r\n    ],\r\n  },\r\n  progress: {\r\n    id: '2',\r\n    name: 'Progress',\r\n    boardStyle: {\r\n      width: '452',\r\n      height: '865',\r\n      backgroundColor: '#B671DA',\r\n    },\r\n    cardStyle: { width: '392', height: '112', backgroundColor: '#A024DA' },\r\n    data: [{ id: '004', title: 'Take a Shower', subTitle: '', content: 'test3' }],\r\n  },\r\n  complete: {\r\n    id: '3',\r\n    name: 'Complete',\r\n    boardStyle: {\r\n      width: '452',\r\n      height: '865',\r\n      backgroundColor: '#613678',\r\n    },\r\n    cardStyle: { width: '392', height: '112', backgroundColor: '#7E4F94' },\r\n    data: [],\r\n  },\r\n};\r\n","import { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport interface CalenderChangeMenuProps {}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  button: (props: CalenderChangeMenuProps) => ({\r\n    color: theme.palette.primary.main,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    display: 'flex',\r\n    borderColor: theme.palette.primary.main,\r\n    '& .MuiOutlinedInput-root': {\r\n      color: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      '& fieldset': {\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: theme.palette.primary.dark,\r\n      },\r\n    },\r\n  }),\r\n}));\r\n\r\nexport const CalenderChangeMenu = (props: CalenderChangeMenuProps) => {\r\n  const classes = useStyle(props);\r\n  const [date, setDate] = React.useState<Date | null>(new Date());\r\n\r\n  const handleChange = React.useCallback(\r\n    (date: Date | null) => {\r\n      setDate(date);\r\n    },\r\n    [setDate]\r\n  );\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        inputVariant=\"outlined\"\r\n        format=\"MM/dd/yyyy\"\r\n        InputAdornmentProps={{ position: 'start' }}\r\n        value={date}\r\n        onChange={handleChange}\r\n        className={classes.button}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n","import { Calender } from '../types/calender/calender';\r\n\r\nconst PLATE_ROW = 7;\r\nconst PLATE_COLUMNS = 6;\r\n\r\nexport const dateList = ['Sun', 'Mon', 'Thu', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nexport const monthList = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\n/**\r\n * @param number The month number, 0 based\r\n * @param number The year, not zero based, required to account for leap years\r\n * @return {string} month name\r\n */\r\nexport function getCurrentMonthByDate(month: number, year: number) {\r\n  const date = new Date(year, month, 1);\r\n  return monthList[date.getMonth() - 1];\r\n}\r\n\r\n/**\r\n * @param number The month number, 0 based\r\n * @param number The year, not zero based, required to account for leap years\r\n * @return {Date} date which start day from month\r\n */\r\nexport function getFirstDay(month: number, year: number) {\r\n  const date = new Date(year, month, 1);\r\n  return new Date(date.getFullYear(), date.getMonth(), 1);\r\n}\r\n\r\n/**\r\n * @param number The month number, 0 based\r\n * @param number The year, not zero based, required to account for leap years\r\n * @return {Date} date which last day from month\r\n */\r\nexport function getLastDay(month: number, year: number) {\r\n  const date = new Date(year, month, 1);\r\n\r\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n}\r\n\r\n/**\r\n * @param Date The Date class\r\n * @return {string} The name of week which your day\r\n */\r\nexport function getNameOfDate(date: Date) {\r\n  const weeks = ['Sun', 'Mon', 'Thu', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n  return weeks[date.getDay()];\r\n}\r\n\r\n/**\r\n * @param Date The Date class\r\n * @return {Date[]} Date List before yours current Month in Calender\r\n */\r\nexport function getBeforeMonthList(date: Date) {\r\n  const length = date.getDay();\r\n  const list = [];\r\n  for (let i = 0; i < length; ++i) {\r\n    list.push(new Date(date.getTime() - (i + 1) * (24 * 60 * 60 * 1000)));\r\n  }\r\n  return list;\r\n}\r\n\r\n/**\r\n * @param Date Date class\r\n * @return {Date[]} Date List after yours current Month in Calender\r\n */\r\nexport function getAfterMonthList(date: Date) {\r\n  const list = [];\r\n  for (let i = 0; i < 14; ++i) {\r\n    list.push(new Date(date.getTime() + (i + 1) * (24 * 60 * 60 * 1000)));\r\n  }\r\n  return list;\r\n}\r\n\r\n/**\r\n * @param number month number, 0 based\r\n * @param number year, not zero based, required to account for leap years\r\n * @return {Date[]} List with date objects for each day of the month\r\n */\r\nexport function getCurrentMonthList(month: number, year: number) {\r\n  const date = new Date(year, month, 1);\r\n  const days = [];\r\n  while (date.getMonth() === month) {\r\n    days.push(new Date(date));\r\n    date.setDate(date.getDate() + 1);\r\n  }\r\n  return days;\r\n}\r\n\r\n/**\r\n * @param number month number, 0 based\r\n * @param number year, not zero based, required to account for leap years\r\n * @return {Date | undefined[][]} List with date objects for Calender Date\r\n */\r\nexport function getCalenderDateList(month: number, year: number) {\r\n  const dateList: (Calender | undefined)[][] = Array.from(Array(PLATE_COLUMNS), () => Array(PLATE_ROW).fill(null));\r\n\r\n  const firstDay = getFirstDay(month - 1, year);\r\n  const lastDay = getLastDay(month - 1, year);\r\n\r\n  const current = getCurrentMonthList(month - 1, year);\r\n  const before = getBeforeMonthList(firstDay);\r\n  const after = getAfterMonthList(lastDay);\r\n\r\n  for (let i = 0; i < PLATE_COLUMNS; ++i) {\r\n    for (let j = 0; j < PLATE_ROW; ++j) {\r\n      if (before.length) {\r\n        dateList[i][j] = { date: before.pop(), isCurrent: false };\r\n      } else if (!current.length) {\r\n        dateList[i][j] = { date: after.shift(), isCurrent: false };\r\n      } else dateList[i][j] = { date: current.shift(), isCurrent: true };\r\n    }\r\n  }\r\n\r\n  return dateList;\r\n}\r\n/**\r\n * @param Date your formatting date\r\n * @return {string} formatted date (yyyy-mm-dd)\r\n */\r\nexport function getFormattedDate(date: Date) {\r\n  const year = date.getFullYear();\r\n  const month = ('0' + (1 + date.getMonth())).slice(-2);\r\n  const day = ('0' + date.getDate()).slice(-2);\r\n\r\n  return year + '-' + month + '-' + day;\r\n}\r\n","import { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { getCurrentMonthByDate } from '../../utils/date';\r\n\r\nexport interface CalenderMonthProps {\r\n  month: number;\r\n  year: number;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  font: {\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: 'normal',\r\n    paddingBottom: 15,\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport const CalenderMonth = (props: CalenderMonthProps) => {\r\n  const classes = useStyle(props);\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Typography variant=\"h5\" className={classes.font}>\r\n        {getCurrentMonthByDate(props.month, props.year)}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { dateList } from '../../utils/date';\r\n\r\nexport interface CalenderDateListProps {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  dateTitle: (props: CalenderDateListProps) => ({\r\n    width: props.width,\r\n    height: props.height,\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: 'normal',\r\n    color: theme.palette.primary.dark,\r\n  }),\r\n}));\r\n\r\nexport const CalenderDateList = (props: CalenderDateListProps) => {\r\n  const classes = useStyle(props);\r\n  return (\r\n    <Grid container direction=\"row\">\r\n      {Object.values(dateList).map((date, index) => (\r\n        <Grid key={index} item className={classes.dateTitle} container alignItems=\"center\" justify=\"center\">\r\n          <Typography>{date}</Typography>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCalenderDateList.defaultProps = {\r\n  width: 182,\r\n  height: 35,\r\n};\r\n","import AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nexport interface CustomButtonProps {\r\n  isSubmit?: boolean;\r\n  icon?: React.ReactNode;\r\n  isIcon?: boolean;\r\n  label?: string;\r\n  onClick?: () => void;\r\n  width?: number | string;\r\n  height?: number | string;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  button: (props: CustomButtonProps) => ({\r\n    backgroundColor: theme.palette.text.primary,\r\n    color: theme.palette.primary.main,\r\n    width: props.width,\r\n    height: props.height,\r\n  }),\r\n}));\r\n\r\nexport const CustomButton = (props: CustomButtonProps) => {\r\n  const classes = useStyle(props);\r\n\r\n  return (\r\n    <Button\r\n      className={classes.button}\r\n      variant=\"contained\"\r\n      startIcon={props.isIcon && props.icon}\r\n      type={props.isSubmit ? 'submit' : 'button'}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.label}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.defaultProps = {\r\n  isSubmit: false,\r\n  isIcon: false,\r\n  icon: <AddOutlinedIcon />,\r\n  label: 'Button',\r\n};\r\n","import { makeStyles, Menu, MenuItem } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport React from 'react';\r\n\r\nexport interface PopMenuProps {\r\n  open: boolean;\r\n  anchorEl: null | Element;\r\n  isEdit?: boolean;\r\n  isDelete?: boolean;\r\n  onClose: () => void;\r\n  onOpenDelete?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  deleteIcon: { color: theme.palette.primary.main },\r\n  editIcon: { color: theme.palette.primary.main },\r\n  menuItem: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nexport const PopMenu = (props: PopMenuProps) => {\r\n  const classes = useStyles();\r\n  const { open, anchorEl, isEdit, isDelete, onClose, onOpenDelete } = props;\r\n\r\n  return (\r\n    <Menu open={open} onClose={onClose} anchorEl={anchorEl}>\r\n      {isEdit && (\r\n        <MenuItem className={classes.menuItem}>\r\n          <EditIcon className={classes.editIcon} />\r\n        </MenuItem>\r\n      )}\r\n      {isDelete && (\r\n        <MenuItem className={classes.menuItem} onClick={onOpenDelete}>\r\n          <DeleteIcon className={classes.deleteIcon} />\r\n        </MenuItem>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nPopMenu.defaultProps = {\r\n  open: true,\r\n  isEdit: true,\r\n  isDelete: true,\r\n  onClose: () => {},\r\n  onOpenDelete: () => {},\r\n};\r\n","import {\r\n  Paper,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { Calender } from '../../types/calender/calender';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { PopMenu } from '../Atoms/PopMenu';\r\nimport React from 'react';\r\nexport interface CalenderBoxListProps {\r\n  lists: Calender[];\r\n  onDelete?: () => void;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  cardArea: (props: CalenderBoxListProps) => ({\r\n    marginTop: 60,\r\n    backgroundColor: theme.palette.primary.light,\r\n    width: 360,\r\n    height: 590,\r\n    borderRadius: 20,\r\n  }),\r\n  ListItemArea: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: 15,\r\n  },\r\n}));\r\n\r\nexport const CalenderBoxList = (props: CalenderBoxListProps) => {\r\n  const classes = useStyle(props);\r\n  const { lists, onDelete } = props;\r\n  const [anchorElement, setAnchorElement] = React.useState<null | Element>(null);\r\n\r\n  const handleClick = React.useCallback(\r\n    (event: React.MouseEvent<Element, MouseEvent>) => {\r\n      console.log(event.currentTarget);\r\n      setAnchorElement(event.currentTarget);\r\n    },\r\n    [setAnchorElement]\r\n  );\r\n\r\n  const handleClose = React.useCallback(() => {\r\n    setAnchorElement(null);\r\n  }, [setAnchorElement]);\r\n\r\n  return (\r\n    <Paper elevation={0} variant=\"outlined\" className={classes.cardArea}>\r\n      {lists && (\r\n        <List style={{ padding: 15 }}>\r\n          {lists.map((data, index) => (\r\n            <div key={index}>\r\n              <ListItem className={classes.ListItemArea}>\r\n                <ListItemText>{data.title}</ListItemText>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" onClick={handleClick}>\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <PopMenu\r\n                anchorEl={anchorElement}\r\n                open={Boolean(anchorElement)}\r\n                onClose={handleClose}\r\n                onOpenDelete={onDelete}\r\n              />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n","import { makeStyles, TextField, Typography } from '@material-ui/core';\r\n\r\nexport interface CustomTextFieldProps {\r\n  value?: string | number;\r\n  id?: string;\r\n  title?: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void;\r\n  isFullWidth?: boolean;\r\n  isDate?: boolean;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  textField: {\r\n    borderRadius: 4,\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: theme.palette.text.primary,\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: theme.palette.text.primary,\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: theme.palette.text.primary,\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  title: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nexport const CustomTextField = (props: CustomTextFieldProps) => {\r\n  const classes = useStyle(props);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle2\" className={classes.title}>\r\n        {props.title}\r\n      </Typography>\r\n      <TextField\r\n        id={props.id}\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        fullWidth={props.isFullWidth ? true : false}\r\n        onChange={props.onChange}\r\n        InputProps={{\r\n          className: classes.input,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomTextField.defaultProps = {\r\n  id: 'textField',\r\n  onChange: () => {},\r\n  value: 'value',\r\n  title: 'your title',\r\n  isDate: false,\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { CustomTextField } from '../CustomTextField';\r\n\r\nexport const StepOne = () => {\r\n  const [title, setTitle] = React.useState<string>();\r\n\r\n  const handleChange = React.useCallback(\r\n    (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n      setTitle(event.target.value);\r\n    },\r\n    [setTitle]\r\n  );\r\n\r\n  return (\r\n    <Grid style={{ height: 250 }}>\r\n      <CustomTextField title=\"title\" onChange={handleChange} id=\"title\" value={title} isFullWidth />\r\n    </Grid>\r\n  );\r\n};\r\n","import { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { getFormattedDate } from '../../../utils/date';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  title: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  body: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nexport interface StepThreeProps {\r\n  startDate: Date;\r\n  endDate: Date;\r\n  title: string;\r\n}\r\n\r\nexport const StepThree = (props: StepThreeProps) => {\r\n  const classes = useStyle();\r\n  const { startDate, endDate, title } = props;\r\n\r\n  return (\r\n    <Grid style={{ height: 250 }}>\r\n      <div style={{ paddingBottom: 30 }}>\r\n        <Typography variant=\"subtitle2\" className={classes.title}>\r\n          Title\r\n        </Typography>\r\n        <Typography variant=\"body2\" className={classes.body}>\r\n          {title}\r\n        </Typography>\r\n      </div>\r\n      <div>\r\n        <Typography variant=\"subtitle2\" className={classes.title}>\r\n          Date Info\r\n        </Typography>\r\n        <Typography variant=\"body2\" className={classes.body}>\r\n          start date : {getFormattedDate(startDate)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" className={classes.body}>\r\n          start date : {getFormattedDate(endDate)}\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nStepThree.defaultProps = {\r\n  startDate: new Date(),\r\n  endDate: new Date(),\r\n  title: 'calender title name',\r\n};\r\n","import { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  title: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nexport const StepTwo = () => {\r\n  const classes = useStyle();\r\n  const [startDate, setStartDate] = React.useState<Date | null>(new Date());\r\n  const [endDate, setEndDate] = React.useState<Date | null>(new Date());\r\n\r\n  const handleChange = React.useCallback(\r\n    (date: Date | null, isStart: boolean) => {\r\n      isStart ? setStartDate(date) : setEndDate(date);\r\n    },\r\n    [setStartDate, setEndDate]\r\n  );\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid style={{ height: 250 }}>\r\n        <Typography variant=\"subtitle2\" className={classes.title}>\r\n          Start Date\r\n        </Typography>\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={startDate}\r\n          onChange={(date) => {\r\n            handleChange(date, true);\r\n          }}\r\n        />\r\n\r\n        <Typography variant=\"subtitle2\" className={classes.title}>\r\n          End Date\r\n        </Typography>\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={endDate}\r\n          onChange={(date) => {\r\n            handleChange(date, false);\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Step,\r\n  StepButton,\r\n  StepContent,\r\n  StepLabel,\r\n  Stepper,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { StepOne } from '../Atoms/Steps/StepOne';\r\nimport { StepThree } from '../Atoms/Steps/StepThree';\r\nimport { StepTwo } from '../Atoms/Steps/StepTwo';\r\nimport { CustomButton } from '../Atoms/CustomButton';\r\n\r\nexport interface CalenderStepperProps {\r\n  steps: string[];\r\n  onClose?: () => void;\r\n  onComplete?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    StepArea: {\r\n      width: 819,\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    step: {\r\n      color: theme.palette.primary.dark,\r\n      '& .MuiStepIcon-completed': {\r\n        color: theme.palette.primary.dark,\r\n      },\r\n      '& .MuiStepIcon-active': {\r\n        color: theme.palette.primary.dark,\r\n      },\r\n    },\r\n    stepIcon: {\r\n      color: theme.palette.primary.dark,\r\n    },\r\n    stepIconText: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst getStepContent = (step: number) => {\r\n  switch (step) {\r\n    case 0:\r\n      return <StepOne />;\r\n    case 1:\r\n      return <StepTwo />;\r\n    case 2:\r\n      return <StepThree />;\r\n    default:\r\n      return 'Unknown Step';\r\n  }\r\n};\r\n\r\nexport const CalenderStepper = (props: CalenderStepperProps) => {\r\n  const classes = useStyles();\r\n  const { steps, onClose, onComplete } = props;\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleStep = React.useCallback(\r\n    (isNext) => {\r\n      setActiveStep((prev) => (isNext ? prev + 1 : prev - 1));\r\n    },\r\n    [setActiveStep]\r\n  );\r\n\r\n  return (\r\n    <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.StepArea}>\r\n      {steps.map((label, index) => (\r\n        <Step key={label}>\r\n          <StepButton\r\n            classes={{\r\n              root: classes.step,\r\n            }}\r\n          >\r\n            <StepLabel>{label}</StepLabel>\r\n          </StepButton>\r\n          <StepContent>{getStepContent(index)}</StepContent>\r\n        </Step>\r\n      ))}\r\n      <Grid container>\r\n        <Grid item xs={6} style={{ padding: 15 }}>\r\n          <CustomButton\r\n            label={activeStep === 0 ? 'Cancel' : 'Back'}\r\n            isIcon={false}\r\n            onClick={() => {\r\n              if (activeStep === 0) {\r\n                onClose && onClose();\r\n              } else {\r\n                handleStep(false);\r\n              }\r\n            }}\r\n            width={'100%'}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} style={{ padding: 15 }}>\r\n          <CustomButton\r\n            label={activeStep === steps.length - 1 ? 'Complete' : 'Next'}\r\n            isIcon={false}\r\n            onClick={() => {\r\n              if (activeStep === steps.length - 1) {\r\n                onComplete && onComplete();\r\n              } else {\r\n                handleStep(true);\r\n              }\r\n            }}\r\n            width={'100%'}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Stepper>\r\n  );\r\n};\r\n\r\nCalenderStepper.defaultProps = {\r\n  steps: ['Make Title', 'Choose Date', 'Check Information'],\r\n};\r\n","import { Drawer, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { CalenderStepper } from '../Molecules/CalenderStepper';\r\n\r\nexport interface CalenderAddDrawerProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperAnchorBottom: {\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    width: 867,\r\n    borderTopLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport const CalenderAddDrawer = (props: CalenderAddDrawerProps) => {\r\n  const classes = useStyles();\r\n  const { open, onClose } = props;\r\n\r\n  return (\r\n    <Drawer anchor={'bottom'} open={open} onClose={onClose} classes={{ paperAnchorBottom: classes.paperAnchorBottom }}>\r\n      <Grid container direction=\"column\">\r\n        <Grid item style={{ padding: 15 }}>\r\n          <Typography variant=\"h4\">Create</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <CalenderStepper onClose={onClose} />\r\n        </Grid>\r\n      </Grid>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nCalenderAddDrawer.defaultProps = {\r\n  open: true,\r\n  onClose: () => {},\r\n};\r\n","import { Dialog, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { Calender } from '../../types/calender/calender';\r\nimport { CustomButton } from '../Atoms/CustomButton';\r\n\r\nexport interface CalenderDeleteDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  data: Calender;\r\n}\r\nconst useStyle = makeStyles((theme) => ({\r\n  modal: (props: CalenderDeleteDialogProps) => ({\r\n    borderRadius: 20,\r\n    backgroundColor: theme.palette.primary.main,\r\n    width: 423,\r\n    height: 185,\r\n    padding: 30,\r\n  }),\r\n}));\r\nexport const CalenderDeleteDialog = (props: CalenderDeleteDialogProps) => {\r\n  const classes = useStyle(props);\r\n  const { open, onClose, data } = props;\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth={'lg'} PaperProps={{ classes: { root: classes.modal } }}>\r\n      <Grid container>\r\n        <Grid item style={{ paddingBottom: '3vh' }}>\r\n          <Typography variant=\"h4\">Delete {data.title} ?</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"row\" justify=\"space-between\">\r\n          <Grid item>\r\n            <CustomButton label=\"Yes\" onClick={() => {}} />\r\n          </Grid>\r\n          <Grid item>\r\n            <CustomButton label=\"Cancel\" onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nCalenderDeleteDialog.defaultProps = {\r\n  open: true,\r\n  data: { date: new Date(), isCurrent: true, title: 'test' },\r\n};\r\n","import { Dialog, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getFormattedDate } from '../../utils/date';\r\nimport { CustomButton } from '../Atoms/CustomButton';\r\nimport { CalenderBoxList } from './CalenderBoxList';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { CalenderAddDrawer } from '../Organisms/CalenderAddDrawer';\r\nimport { CalenderDeleteDialog } from '../Organisms/CalenderDeleteDialog';\r\n\r\nexport interface CalenderModalProps {\r\n  date: Date;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  modal: (props: CalenderModalProps) => ({\r\n    borderRadius: 20,\r\n    backgroundColor: theme.palette.primary.main,\r\n    width: 513,\r\n    height: 1023,\r\n    padding: 30,\r\n  }),\r\n}));\r\n\r\nconst lists = [{ date: new Date(), isCurrent: true, title: 'test' }];\r\n\r\nexport const CalenderModal = (props: CalenderModalProps) => {\r\n  const classes = useStyle(props);\r\n  const { date, open, onClose } = props;\r\n  const [drawerOpen, setDrawerOpen] = React.useState<boolean>(false);\r\n  const [dialogOpen, setDialogOpen] = React.useState<boolean>(false);\r\n  const handleDrawerClose = React.useCallback(() => {\r\n    setDrawerOpen(false);\r\n  }, [setDrawerOpen]);\r\n\r\n  const handleDialogClose = React.useCallback(() => {\r\n    setDialogOpen(false);\r\n  }, [setDrawerOpen]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={onClose} maxWidth={'lg'} PaperProps={{ classes: { root: classes.modal } }}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h4\">{getFormattedDate(date)}</Typography>\r\n          </Grid>\r\n          <Grid item container justify=\"center\" style={{ paddingBottom: 30 }}>\r\n            <CalenderBoxList\r\n              lists={lists}\r\n              onDelete={() => {\r\n                setDialogOpen(true);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item container justify=\"center\" style={{ paddingBottom: 30 }}>\r\n            <CustomButton\r\n              label=\"New Event\"\r\n              isIcon={false}\r\n              width={344}\r\n              height={56}\r\n              onClick={() => {\r\n                setDrawerOpen(true);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item container justify=\"center\">\r\n            <CustomButton label=\"Back\" icon={<ArrowBackIcon />} width={344} height={56} onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </Dialog>\r\n      <CalenderAddDrawer open={drawerOpen} onClose={handleDrawerClose} />\r\n      <CalenderDeleteDialog open={dialogOpen} onClose={handleDialogClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nCalenderModal.defaultProps = {\r\n  open: true,\r\n  onClose: () => {},\r\n  date: new Date(),\r\n};\r\n","import { Box, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { CalenderModal } from '../Molecules/CalenderModal';\r\n\r\nexport interface DatePlateProps {\r\n  date: Date;\r\n  width: number;\r\n  height: number;\r\n  isBeforeMonth?: boolean;\r\n  isAfterMonth?: boolean;\r\n  dateName?: string;\r\n  firstDay?: Date;\r\n  lastDay?: Date;\r\n  isCurrent?: boolean;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  datePlate: (props: DatePlateProps) => ({\r\n    width: props.width,\r\n    height: props.height,\r\n    color: theme.palette.text.primary,\r\n    borderWidth: 1,\r\n    borderColor: theme.palette.primary.light,\r\n    borderStyle: 'solid',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.light,\r\n      cursor: 'pointer',\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.primary.dark,\r\n      borderStyle: 'solid',\r\n      color: theme.palette.text.primary,\r\n    },\r\n  }),\r\n  plate: {\r\n    padding: 15,\r\n  },\r\n  font: (props: DatePlateProps) => ({\r\n    fontFamily: 'Poppins',\r\n    fontStyle: 'normal',\r\n    fontWeight: props.isCurrent ? 'bold' : 'normal',\r\n    color: props.isCurrent ? theme.palette.text.secondary : theme.palette.grey[500],\r\n  }),\r\n}));\r\n\r\nexport const DatePlate = (props: DatePlateProps) => {\r\n  const classes = useStyle(props);\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const handleClose = React.useCallback(() => {\r\n    setOpen(false);\r\n  }, [setOpen]);\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        className={classes.datePlate}\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n      >\r\n        <Grid container className={classes.plate}>\r\n          <Typography className={classes.font}>{props.date.getDate()}</Typography>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <CalenderModal open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nDatePlate.defaultProps = {\r\n  date: new Date(),\r\n  width: 182,\r\n  height: 114,\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Calender } from '../../types/calender/calender';\r\nimport { dateList, getCalenderDateList } from '../../utils/date';\r\nimport { DatePlate } from '../Atoms/DatePlate';\r\n\r\nexport interface CalenderPlateProps {\r\n  month: number;\r\n  year: number;\r\n}\r\n\r\nexport const CalenderPlate = (props: CalenderPlateProps) => {\r\n  const [CalenderDateList, setCalenderDateList] = React.useState<(Calender | undefined)[][]>(\r\n    getCalenderDateList(props.month, props.year)\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container direction=\"column\">\r\n        {CalenderDateList.map((rowDateList, columnIndex) => {\r\n          return (\r\n            <Grid key={columnIndex} item xs={12} container direction=\"row\">\r\n              {rowDateList.map((dData, rowIndex) => {\r\n                return (\r\n                  dData && (\r\n                    <Grid item key={rowIndex}>\r\n                      <DatePlate dateName={dateList[rowIndex]} date={dData.date} isCurrent={dData.isCurrent} />\r\n                    </Grid>\r\n                  )\r\n                );\r\n              })}\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport { CalenderChangeMenu } from '../Atoms/CalenderChangeMenu';\r\nimport { CalenderMonth } from '../Atoms/CalenderMonth';\r\nimport { CalenderDateList } from '../Molecules/CalenderDateList';\r\nimport { CalenderPlate } from '../Molecules/CalenderPlate';\r\n\r\nexport const Calender = () => {\r\n  return (\r\n    <Grid container direction=\"column\" alignContent=\"center\">\r\n      <Grid item style={{ paddingBottom: 50 }}>\r\n        <CalenderChangeMenu />\r\n      </Grid>\r\n      <Grid item>\r\n        <CalenderMonth month={7} year={2021} />\r\n      </Grid>\r\n      <Grid item>\r\n        <CalenderDateList />\r\n      </Grid>\r\n      <Grid item>\r\n        <CalenderPlate month={7} year={2021} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\n//https://www.w3.org/TR/SVG/paths.html#PathDataCubicBezierCommands\r\n\r\nexport interface CanvasGraphProps {\r\n  data: GraphData[];\r\n  width: number;\r\n  height: number;\r\n  horizontalGuides: number;\r\n  verticalGuides: number;\r\n  precision: number;\r\n  tension: number;\r\n  isClosed: boolean;\r\n  numOfSegments: number;\r\n  showPoints: boolean;\r\n}\r\n\r\nexport type GraphData = {\r\n  label: string;\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nconst defaultData: GraphData[] = [\r\n  { label: 'S', x: 0, y: 2 },\r\n  { label: 'M', x: 1, y: 4 },\r\n  { label: 'T', x: 2, y: 3 },\r\n  { label: 'W', x: 3, y: 1 },\r\n  { label: 'TH', x: 4, y: 4 },\r\n  { label: 'F', x: 5, y: 5 },\r\n  { label: 'S', x: 6, y: 4 },\r\n  { label: 'W', x: 7, y: 1 },\r\n  { label: 'TH', x: 8, y: 4 },\r\n  { label: 'F', x: 9, y: 5 },\r\n  { label: 'S', x: 10, y: 2 },\r\n  { label: 'F', x: 11, y: 2 },\r\n];\r\n\r\nexport const CanvasGraph = (props: CanvasGraphProps) => {\r\n  const {\r\n    data,\r\n    height,\r\n    width,\r\n    horizontalGuides: numberOfHorizontalGuides,\r\n    verticalGuides: numberOfVerticalGuides,\r\n    precision,\r\n    tension,\r\n    isClosed,\r\n    numOfSegments,\r\n    showPoints,\r\n  } = props;\r\n  const FONT_SIZE = width / 100;\r\n  const maximumXFromData = Math.max(...data.map((e) => e.x));\r\n  const maximumYFromData = Math.max(...data.map((e) => e.y));\r\n\r\n  const digits = parseFloat(maximumYFromData.toString()).toFixed(precision).length + 1;\r\n\r\n  const padding = (FONT_SIZE + digits) * 3;\r\n  const chartWidth = width - padding * 2;\r\n  const chartHeight = height - padding * 2;\r\n\r\n  const points = data.flatMap((element) => {\r\n    const x = (element.x / maximumXFromData) * chartWidth + padding;\r\n    const y = chartHeight - (element.y / maximumYFromData) * chartHeight + padding;\r\n\r\n    return [x, y];\r\n  });\r\n\r\n  let canvas, ctx;\r\n  const canvasRef = React.createRef<HTMLCanvasElement>();\r\n\r\n  const drawLabelsXAxis = (ctx: CanvasRenderingContext2D) => {\r\n    const y = height - padding + FONT_SIZE * 2;\r\n    const maximumX = maximumXFromData;\r\n    return (\r\n      <>\r\n        {data.map((element) => {\r\n          const x = (element.x / maximumX) * chartWidth + padding - FONT_SIZE / 2;\r\n          ctx.font = `${FONT_SIZE}px Helvetica`;\r\n          ctx.fillStyle = '#d050f7';\r\n          ctx.fillText(`${element.label}`, x, y);\r\n          return;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const drawLabelsYAxis = (ctx: CanvasRenderingContext2D) => {\r\n    const PARTS = numberOfHorizontalGuides;\r\n    const maximumY = maximumYFromData;\r\n    return (\r\n      <>\r\n        {new Array(PARTS + 1).fill(0).map((_, index) => {\r\n          const x = FONT_SIZE;\r\n          const ratio = index / numberOfHorizontalGuides;\r\n\r\n          const yCoordinate = chartHeight - chartHeight * ratio + padding + FONT_SIZE / 2;\r\n\r\n          ctx.font = `${FONT_SIZE}px Helvetica`;\r\n          ctx.fillStyle = '#d050f7';\r\n          ctx.fillText(`${parseFloat(String(maximumY * (index / PARTS))).toFixed(precision)}`, x, yCoordinate);\r\n          return;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n  const drawAxis = (ctx: CanvasRenderingContext2D, points: number[]) => {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = '#ccc';\r\n    ctx.moveTo(points[0], points[1]);\r\n    ctx.lineTo(points[2], points[3]);\r\n    ctx.stroke();\r\n  };\r\n\r\n  const drawHorizontalGuides = (ctx: CanvasRenderingContext2D) => {\r\n    const startX = padding;\r\n    const endX = width - padding;\r\n\r\n    new Array(numberOfHorizontalGuides).fill(0).map((_, index) => {\r\n      const ratio = (index + 1) / numberOfHorizontalGuides;\r\n      const yCoordinate = chartHeight - chartHeight * ratio + padding;\r\n      const points = `${startX},${yCoordinate} ${endX},${yCoordinate}`;\r\n\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = '#ccc';\r\n      ctx.moveTo(startX, yCoordinate);\r\n      ctx.lineTo(endX, yCoordinate);\r\n      ctx.lineWidth = 0.5;\r\n      ctx.stroke();\r\n    });\r\n  };\r\n\r\n  function drawXAxis(ctx: CanvasRenderingContext2D) {\r\n    const points = [padding, height - padding, width - padding, height - padding];\r\n\r\n    return drawAxis(ctx, points);\r\n  }\r\n\r\n  function drawYAxis(ctx: CanvasRenderingContext2D) {\r\n    const points = [padding, padding, padding, height - padding];\r\n\r\n    return drawAxis(ctx, points);\r\n  }\r\n\r\n  function drawLines(ctx: CanvasRenderingContext2D, pts: number[]) {\r\n    for (let i = 2; i < pts.length - 1; i += 2) {\r\n      ctx.lineTo(pts[i], pts[i + 1]);\r\n      ctx.lineWidth = 2;\r\n    }\r\n  }\r\n\r\n  function drawCurve(\r\n    ctx: CanvasRenderingContext2D,\r\n    ptsa: number[],\r\n    tension: number,\r\n    isClosed: boolean,\r\n    numOfSegments: number,\r\n    showPoints: boolean\r\n  ) {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = '#d050f7';\r\n    drawLines(ctx, getCurvePoints(ptsa, tension, isClosed, numOfSegments));\r\n\r\n    // if (showPoints) {\r\n    //   for (var i = 0; i < ptsa.length - 1; i += 2) {\r\n    //     ctx.beginPath();\r\n    //     ctx.fillRect(ptsa[i], ptsa[i + 1], 5, 5);\r\n    //   }\r\n    // }\r\n\r\n    ctx.stroke();\r\n  }\r\n\r\n  function getCurvePoints(pts: number[], tension: number, isClosed: boolean, numOfSegments: number) {\r\n    // use input value if provided, or use a default value\r\n    tension = typeof tension != 'undefined' ? tension : 0.5;\r\n    isClosed = isClosed ? isClosed : false;\r\n    numOfSegments = numOfSegments ? numOfSegments : 16;\r\n\r\n    var _pts = [],\r\n      res = [], // clone array\r\n      x,\r\n      y, // our x,y coords\r\n      t1x,\r\n      t2x,\r\n      t1y,\r\n      t2y, // tension vectors\r\n      c1,\r\n      c2,\r\n      c3,\r\n      c4, // cardinal points\r\n      st,\r\n      t,\r\n      i; // steps based on num. of segments\r\n\r\n    // clone array so we don't change the original\r\n    _pts = pts.slice(0);\r\n\r\n    // The algorithm require a previous and next point to the actual point array.\r\n    // Check if we will draw closed or open curve.\r\n    // If closed, copy end points to beginning and first points to end\r\n    // If open, duplicate first points to befinning, end points to end\r\n    if (isClosed) {\r\n      _pts.unshift(pts[pts.length - 1]);\r\n      _pts.unshift(pts[pts.length - 2]);\r\n      _pts.unshift(pts[pts.length - 1]);\r\n      _pts.unshift(pts[pts.length - 2]);\r\n      _pts.push(pts[0]);\r\n      _pts.push(pts[1]);\r\n    } else {\r\n      _pts.unshift(pts[1]); //copy 1. point and insert at beginning\r\n      _pts.unshift(pts[0]);\r\n      _pts.push(pts[pts.length - 2]); //copy last point and append\r\n      _pts.push(pts[pts.length - 1]);\r\n    }\r\n\r\n    // ok, lets start..\r\n\r\n    // 1. loop goes through point array\r\n    // 2. loop goes through each segment between the 2 pts + 1e point before and after\r\n    for (i = 2; i < _pts.length - 4; i += 2) {\r\n      for (t = 0; t <= numOfSegments; t++) {\r\n        // calc tension vectors\r\n        t1x = (_pts[i + 2] - _pts[i - 2]) * tension;\r\n        t2x = (_pts[i + 4] - _pts[i]) * tension;\r\n\r\n        t1y = (_pts[i + 3] - _pts[i - 1]) * tension;\r\n        t2y = (_pts[i + 5] - _pts[i + 1]) * tension;\r\n\r\n        // calc step\r\n        st = t / numOfSegments;\r\n\r\n        // calc cardinals\r\n        c1 = 2 * Math.pow(st, 3) - 3 * Math.pow(st, 2) + 1;\r\n        c2 = -(2 * Math.pow(st, 3)) + 3 * Math.pow(st, 2);\r\n        c3 = Math.pow(st, 3) - 2 * Math.pow(st, 2) + st;\r\n        c4 = Math.pow(st, 3) - Math.pow(st, 2);\r\n\r\n        // calc x and y cords with common control vectors\r\n        x = c1 * _pts[i] + c2 * _pts[i + 2] + c3 * t1x + c4 * t2x;\r\n        y = c1 * _pts[i + 1] + c2 * _pts[i + 3] + c3 * t1y + c4 * t2y;\r\n\r\n        //store points in array\r\n        res.push(x);\r\n        res.push(y);\r\n      }\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (canvasRef.current) {\r\n      canvas = canvasRef.current;\r\n      ctx = canvas.getContext('2d');\r\n      if (ctx) {\r\n        // drawYAxis(ctx);\r\n        drawXAxis(ctx);\r\n        drawLabelsXAxis(ctx);\r\n        drawLabelsYAxis(ctx);\r\n        drawHorizontalGuides(ctx);\r\n        drawCurve(ctx, points, tension, isClosed, numOfSegments, showPoints);\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} width={width} height={height} />;\r\n};\r\n\r\nCanvasGraph.defaultProps = {\r\n  data: defaultData,\r\n  height: 450,\r\n  width: 1300,\r\n  horizontalGuides: 4,\r\n  verticalGuides: null,\r\n  precision: 2,\r\n  tension: 0.5,\r\n  isClosed: false,\r\n  numOfSegments: 18,\r\n  showPoints: true,\r\n};\r\n","import { Box, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport dateformat from 'dateformat';\r\n\r\nexport interface GraphHeaderProps {\r\n  currentDate: Date;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  headTitle: {\r\n    fontWeight: 'bold',\r\n    color: theme.palette.text.hint,\r\n  },\r\n  subTitle: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  labelOne: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  labelTwo: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n}));\r\n\r\nconst ColoredLine = ({ color }: any) => (\r\n  <hr\r\n    style={{\r\n      color: color,\r\n      backgroundColor: color,\r\n      height: 3,\r\n      border: 'none',\r\n      width: 30,\r\n    }}\r\n  />\r\n);\r\n\r\nexport const GraphHeader = (props: GraphHeaderProps) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"space-between\">\r\n      <Grid item container direction=\"column\">\r\n        <Grid item>\r\n          <Typography className={classes.headTitle} variant=\"h5\">\r\n            Today's trends\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography className={classes.subTitle} variant=\"caption\">\r\n            as of {dateformat(props.currentDate, 'dddd, mmmm dS, yyyy, h:MM:ss TT')}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n        <Grid item style={{ marginRight: 10 }}>\r\n          <ColoredLine color=\"#d050f7\" />\r\n        </Grid>\r\n        <Grid item style={{ marginRight: 50 }}>\r\n          <Typography className={classes.labelOne} variant=\"caption\">\r\n            Today\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item style={{ marginRight: 10 }}>\r\n          <ColoredLine color=\"#d050f7\" />\r\n        </Grid>\r\n        <Grid item style={{ marginRight: 10 }}>\r\n          <Typography className={classes.labelOne} variant=\"caption\">\r\n            Yesterday\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nGraphHeader.defaultProps = {\r\n  currentDate: new Date(),\r\n};\r\n","import { Card, Divider, Grid, List, ListItem, makeStyles, Typography } from '@material-ui/core';\r\nimport { CanvasGraph } from '../Atoms/CanvasGraph';\r\nimport { GraphHeader } from '../Atoms/GraphHeader';\r\n\r\nexport interface GraphWidgetProps {\r\n  width?: number;\r\n  height: number;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  card: {\r\n    padding: 15,\r\n  },\r\n  divider: {\r\n    background: theme.palette.grey[200],\r\n    width: 2,\r\n  },\r\n  cardArea: (props: GraphWidgetProps) => ({\r\n    width: props.width,\r\n    height: props.height,\r\n  }),\r\n  title: {\r\n    color: theme.palette.text.hint,\r\n    fontWeight: 'bold',\r\n  },\r\n  value: {\r\n    color: theme.palette.text.hint,\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\nconst tempData = [\r\n  { title: 'Todo', value: 449 },\r\n  { title: 'Progress', value: 426 },\r\n  { title: 'Complete', value: 33 },\r\n  { title: 'Completed This Month', value: 8 },\r\n  { title: 'Percentage to Complete', value: '94%' },\r\n];\r\n\r\nexport const GraphWidget = (props: GraphWidgetProps) => {\r\n  const classes = useStyle(props);\r\n\r\n  return (\r\n    <Card className={classes.cardArea}>\r\n      <Grid container>\r\n        <Grid item className={classes.card}>\r\n          <GraphHeader />\r\n          <CanvasGraph />\r\n        </Grid>\r\n        <Divider className={classes.divider} orientation={'vertical'} flexItem light />\r\n        <Grid item>\r\n          <List style={{ width: 325 }}>\r\n            {tempData.map((list, index) => (\r\n              <div key={index}>\r\n                <ListItem style={{ height: 106 }}>\r\n                  <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                    <Grid item style={{ paddingBottom: 15 }}>\r\n                      <Typography className={classes.title} variant=\"h5\">\r\n                        {list.title}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography className={classes.value} variant=\"h6\">\r\n                        {list.value}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nGraphWidget.defaultProps = {\r\n  width: 1700,\r\n  height: 546,\r\n};\r\n","export type HomeCardObject = {\r\n  Todo: string;\r\n  Progress: string;\r\n  Complete: string;\r\n  Total: string;\r\n};\r\n\r\nexport const defaultHomeCardObject: HomeCardObject = {\r\n  Todo: '30',\r\n  Progress: '40',\r\n  Complete: '20',\r\n  Total: '90',\r\n};\r\n","import { Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nexport interface WidgetProps {\r\n  width: number;\r\n  height: number;\r\n  title?: string;\r\n  value?: string;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  card: (props: WidgetProps) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: props.width,\r\n    height: props.height,\r\n    borderRadius: 15,\r\n    color: theme.palette.text.hint,\r\n    fontFamily: 'Mulish',\r\n    fontStyle: 'normal',\r\n    fontWeight: 'bold',\r\n  }),\r\n}));\r\n\r\nexport const Widget = (props: WidgetProps) => {\r\n  const classes = useStyle(props);\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item style={{ paddingBottom: 15 }}>\r\n            <Typography variant=\"h5\">{props.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h3\">{props.value}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nWidget.defaultProps = {\r\n  width: 392,\r\n  height: 142,\r\n  title: 'Card',\r\n  value: '0',\r\n};\r\n","import { Grid, makeStyles } from '@material-ui/core';\r\nimport { defaultHomeCardObject, HomeCardObject } from '../../types/home/types';\r\nimport { Widget } from '../Molecules/Widget';\r\n\r\nexport interface HomeCardListProps {\r\n  values?: HomeCardObject;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  homeCard: {\r\n    padding: 30,\r\n  },\r\n}));\r\n\r\nexport const HomeCardList = (props: HomeCardListProps) => {\r\n  const classes = useStyle();\r\n  const { values } = props;\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      {Object.entries(values ? values : defaultHomeCardObject).map((value) => {\r\n        return (\r\n          <Grid item key={value[0]} className={classes.homeCard}>\r\n            <Widget value={value[1]} title={value[0]} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n","import { Dialog, DialogContent, DialogTitle, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport React from 'react';\r\nimport { MemoData } from '../../types/memo/memo';\r\nimport { CustomButton } from '../Atoms/CustomButton';\r\nimport { CustomTextField } from '../Atoms/CustomTextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog: {\r\n    width: 790,\r\n    height: 511,\r\n    backgroundColor: theme.palette.primary.main,\r\n    borderRadius: '15',\r\n  },\r\n  title: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  content: {\r\n    height: 400,\r\n  },\r\n  // textField: {\r\n  //   borderRadius: 4,\r\n  //   '& .MuiOutlinedInput-root': {\r\n  //     '& fieldset': {\r\n  //       borderColor: theme.palette.text.primary,\r\n  //     },\r\n  //     '&:hover fieldset': {\r\n  //       borderColor: theme.palette.text.primary,\r\n  //     },\r\n  //     '&.Mui-focused fieldset': {\r\n  //       borderColor: theme.palette.text.primary,\r\n  //     },\r\n  //   },\r\n  // },\r\n  input: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nexport interface AddDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  subTitle?: string;\r\n  onAddMemo: (title: string, memo: MemoData) => void;\r\n}\r\n\r\nexport const AddDialog = (props: AddDialogProps) => {\r\n  const classes = useStyles();\r\n  const { open, onClose, subTitle, onAddMemo } = props;\r\n  const [addState, setAddState] = React.useState<MemoData>({ title: '', subTitle: '' });\r\n\r\n  const onChangeValue = React.useCallback(\r\n    (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n      const value = event.target.value;\r\n      const key = event.target.id;\r\n\r\n      const newMemo: MemoData = {\r\n        ...addState,\r\n        [key]: value,\r\n      };\r\n      setAddState(newMemo);\r\n    },\r\n    [addState]\r\n  );\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    onAddMemo(subTitle ?? 'Todo', addState);\r\n    onClose && onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth={'lg'}>\r\n      <Paper className={classes.dialog}>\r\n        <form onSubmit={onSubmit}>\r\n          <DialogTitle className={classes.title}>\r\n            <div>\r\n              <Typography variant=\"h6\">Add Card</Typography>\r\n            </div>\r\n\r\n            <Typography variant=\"body2\">{subTitle}</Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Grid container className={classes.content}>\r\n              <Grid item style={{ width: '100%', paddingBottom: 30 }}>\r\n                <CustomTextField title=\"title\" id=\"title\" value={addState.title} onChange={onChangeValue} isFullWidth />\r\n              </Grid>\r\n              <Grid item style={{ width: '100%', paddingBottom: '12vh' }}>\r\n                <CustomTextField\r\n                  title=\"subTitle\"\r\n                  id=\"subTitle\"\r\n                  value={addState.subTitle}\r\n                  onChange={onChangeValue}\r\n                  isFullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item container direction=\"row\" justify=\"space-between\">\r\n                <Grid item>\r\n                  <CustomButton isSubmit icon={<AddOutlinedIcon />} label=\"Add\" />\r\n                </Grid>\r\n                <Grid item>\r\n                  <CustomButton onClick={onClose} icon={<CloseOutlinedIcon />} label=\"Close\" />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n        </form>\r\n      </Paper>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { Fab, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { BoardStyleProps } from '../../../types/board/board';\r\nimport { CardStyleProps } from '../../../types/card/card';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport { AddDialog } from '../../Organisms/AddDialog';\r\nimport { MemoData } from '../../../types/memo/memo';\r\nexport interface CustomBoardProps {\r\n  title?: string;\r\n  boardStyle?: BoardStyleProps;\r\n  cardStyle?: CardStyleProps;\r\n  children?: React.ReactNode;\r\n  onAddMemo: (title: string, memo: MemoData) => void;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, CustomBoardProps>((theme: Theme) => ({\r\n  board: (props) => ({\r\n    backgroundColor: props.boardStyle!.backgroundColor,\r\n    width: Number(props.boardStyle!.width),\r\n    height: Number(props.boardStyle!.height),\r\n    borderRadius: 20,\r\n    borderColor: props.cardStyle!.backgroundColor,\r\n  }),\r\n  title: (props) => ({\r\n    height: '8vh',\r\n    color: '#ffffff',\r\n    borderTopLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n    backgroundColor: props.cardStyle!.backgroundColor,\r\n  }),\r\n  floatingButton: (props) => ({\r\n    background: props.cardStyle!.backgroundColor,\r\n    color: '#ffffff',\r\n  }),\r\n}));\r\n\r\nexport const CustomBoard = (props: CustomBoardProps) => {\r\n  const classes = useStyles(props ?? {});\r\n\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  const handleClose = React.useCallback(() => {\r\n    setOpen(false);\r\n  }, [setOpen]);\r\n\r\n  return (\r\n    <Paper className={classes.board} variant=\"outlined\">\r\n      <Grid container direction={'column'}>\r\n        <Grid item className={classes.title} container alignItems=\"center\" justify=\"center\">\r\n          <Typography variant=\"h4\">{props.title}</Typography>\r\n        </Grid>\r\n        <Grid item>{props.children}</Grid>\r\n        <Grid item container justify=\"center\">\r\n          <Fab\r\n            aria-label=\"add\"\r\n            className={classes.floatingButton}\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n          >\r\n            <AddOutlinedIcon />\r\n          </Fab>\r\n        </Grid>\r\n      </Grid>\r\n      <AddDialog open={open} onClose={handleClose} subTitle={props.title} onAddMemo={props.onAddMemo} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nCustomBoard.defaultProps = {\r\n  style: {\r\n    width: '452',\r\n    height: '865',\r\n    backgroundColor: '#E1C3F0',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { Card, CardContent, Grid, IconButton, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { CardStyleProps } from '../../../types/card/card';\r\n\r\nexport interface CustomCardProps {\r\n  title: string;\r\n  subTitle: string;\r\n  style?: CardStyleProps;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, CardStyleProps>((theme: Theme) => ({\r\n  card: (props) => ({\r\n    backgroundColor: props.backgroundColor,\r\n    width: Number(props.width),\r\n    height: Number(props.height),\r\n    borderRadius: 20,\r\n  }),\r\n  cardContent: (props) => ({\r\n    paddingLeft: 15,\r\n  }),\r\n  text: {\r\n    color: '#FFFFFF',\r\n  },\r\n}));\r\n\r\nexport const CustomCard = (props: CustomCardProps) => {\r\n  const classes = useStyles(props.style ?? {});\r\n\r\n  const { title, subTitle } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Grid container direction={'column'}>\r\n          <Grid item>\r\n            <IconButton size=\"small\" style={{ color: '#FFFFFF' }}>\r\n              <CancelIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item className={classes.cardContent}>\r\n            <Typography variant={'h6'} className={classes.text}>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant={'subtitle2'} className={classes.text}>\r\n              {subTitle}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nCustomCard.defaultProps = {\r\n  title: 'test',\r\n  subTitle: 'subtest',\r\n  style: {\r\n    width: '392',\r\n    height: '112',\r\n    backgroundColor: '#CE97E8',\r\n  },\r\n};\r\n","import { ListItem, Grid } from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\nimport { DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { CardStyleProps } from '../../../types/card/card';\r\nimport { MemoData } from '../../../types/memo/memo';\r\nimport { CustomCard } from './CustomCard';\r\n\r\nexport interface DraggableListItemProps {\r\n  item: MemoData;\r\n  provided: DraggableProvided;\r\n  snapshop: DraggableStateSnapshot;\r\n  cardStyle: CardStyleProps;\r\n}\r\n\r\nexport const DraggableListItem: FC<DraggableListItemProps> = ({ item, cardStyle, provided, snapshop }) => {\r\n  return (\r\n    <ListItem\r\n      ref={provided.innerRef}\r\n      {...provided.draggableProps}\r\n      {...provided.dragHandleProps}\r\n      style={{\r\n        ...provided.draggableProps.style,\r\n      }}\r\n    >\r\n      <Grid container justify=\"center\">\r\n        <CustomCard title={item.title} subTitle={item.subTitle} style={cardStyle} />\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n","import { List } from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\nimport { Draggable, DroppableProvided, DroppableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { BoardStyleProps } from '../../../types/board/board';\r\nimport { CardStyleProps } from '../../../types/card/card';\r\nimport { MemoData } from '../../../types/memo/memo';\r\nimport { DraggableListItem } from './DraggableListItem';\r\n\r\ninterface DraggableListProps {\r\n  provided: DroppableProvided;\r\n  snapshot: DroppableStateSnapshot;\r\n  data: MemoData[];\r\n  cardStyle: CardStyleProps;\r\n  boardStyle: BoardStyleProps;\r\n}\r\n\r\nconst getListStyle = (snapshop: DroppableStateSnapshot, boardStyle: BoardStyleProps) => ({\r\n  // background: snapshop.isDraggingOver ? 'lightblue' : 'lightgrey',\r\n});\r\n\r\nexport const DraggableList: FC<DraggableListProps> = ({ data, provided, snapshot, cardStyle, boardStyle }) => {\r\n  return (\r\n    <List {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot, boardStyle)}>\r\n      {data.map((el, index) => {\r\n        return (\r\n          <Draggable key={el.id} draggableId={el.id ?? '1'} index={index}>\r\n            {(provided, snapshop) => {\r\n              return (\r\n                <DraggableListItem\r\n                  provided={provided}\r\n                  snapshop={snapshop}\r\n                  item={el}\r\n                  key={el.id}\r\n                  cardStyle={cardStyle}\r\n                />\r\n              );\r\n            }}\r\n          </Draggable>\r\n        );\r\n      })}\r\n      {provided.placeholder}\r\n    </List>\r\n  );\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\nimport { DragDropContext, DragUpdate, Droppable, DropResult, ResponderProvided } from 'react-beautiful-dnd';\r\nimport { CustomBoard } from '../Molecules/Board/CustomBoard';\r\nimport { DraggableList } from '../Molecules/Board/DraggableList';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Board } from '../../types/board/board';\r\nimport { MemoData } from '../../types/memo/memo';\r\ninterface DroppableBoardProps {\r\n  board: Board;\r\n}\r\n\r\nexport const DroppableBoard: FC<DroppableBoardProps> = (props) => {\r\n  const [board, setBoard] = React.useState<Board>(props.board);\r\n\r\n  const onDragUpdate = (initial: DragUpdate, provided: ResponderProvided) => {\r\n    if (initial.destination?.droppableId === 'complete') {\r\n      console.log(initial, provided);\r\n    }\r\n\r\n    if (initial.destination?.droppableId === 'progress') {\r\n      console.log(initial, provided);\r\n    }\r\n\r\n    if (initial.destination?.droppableId === 'todo') {\r\n      console.log(initial);\r\n    }\r\n  };\r\n\r\n  const onDragEnd = (result: DropResult, provided: ResponderProvided) => {\r\n    const { source, destination } = result;\r\n    if (destination && source.droppableId !== destination.droppableId) {\r\n      const sourceData = [...board[source.droppableId].data];\r\n      const destinationData = [...board[destination.droppableId].data];\r\n\r\n      const [moveData] = sourceData.splice(source.index, 1);\r\n      destinationData.splice(destination.index, 0, moveData);\r\n\r\n      setBoard({\r\n        ...board,\r\n        [source.droppableId]: {\r\n          ...board[source.droppableId],\r\n          data: sourceData,\r\n        },\r\n        [destination.droppableId]: {\r\n          ...board[destination.droppableId],\r\n          data: destinationData,\r\n        },\r\n      });\r\n    } else if (destination) {\r\n      const destinationData = [...board[source.droppableId].data];\r\n      const [moveData] = destinationData.splice(source.index, 1);\r\n      destinationData.splice(destination.index, 0, moveData);\r\n      setBoard({\r\n        ...board,\r\n        [source.droppableId]: {\r\n          ...board[source.droppableId],\r\n          data: destinationData,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onAddMemo = React.useCallback(\r\n    (title: string, memo: MemoData) => {\r\n      const memoData = { ...memo, id: uuidv4() };\r\n      console.log(board[title.toLowerCase()].data);\r\n      const data = board[title.toLowerCase()].data.concat(memoData);\r\n      setBoard({\r\n        ...board,\r\n        [title.toLowerCase()]: {\r\n          ...board[title.toLowerCase()],\r\n          data: data,\r\n        },\r\n      });\r\n    },\r\n    [board]\r\n  );\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd} onDragUpdate={onDragUpdate}>\r\n      {Object.entries(board).map(([title, listData]) => {\r\n        return (\r\n          <Droppable key={title} droppableId={title}>\r\n            {(provided, snapshot) => {\r\n              return (\r\n                <Grid item container xs={4} justify=\"center\">\r\n                  <CustomBoard\r\n                    title={listData.name}\r\n                    boardStyle={listData.boardStyle}\r\n                    cardStyle={listData.cardStyle}\r\n                    onAddMemo={(title, memo) => {\r\n                      onAddMemo(title, memo);\r\n                    }}\r\n                    children={\r\n                      <DraggableList\r\n                        provided={provided}\r\n                        snapshot={snapshot}\r\n                        data={listData.data}\r\n                        cardStyle={listData.cardStyle}\r\n                        boardStyle={listData.boardStyle}\r\n                      />\r\n                    }\r\n                  />\r\n                </Grid>\r\n              );\r\n            }}\r\n          </Droppable>\r\n        );\r\n      })}\r\n    </DragDropContext>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IconButton, makeStyles } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport interface DrawerMenuProps {\r\n  onClick: () => void;\r\n}\r\nconst useStyle = makeStyles((theme) => ({\r\n  menu: {\r\n    width: 50,\r\n    height: 50,\r\n    position: 'fixed',\r\n    right: 0,\r\n  },\r\n}));\r\n\r\nexport const DrawerMenu = ({ onClick }: DrawerMenuProps) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <IconButton className={classes.menu} onClick={onClick} size=\"medium\">\r\n      <MenuIcon fontSize={'large'} />\r\n    </IconButton>\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { User } from '../../types/user/user';\r\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\r\nexport interface HomeDrawerProps {\r\n  user?: User;\r\n  isOpen: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: 400,\r\n    height: '100%',\r\n    padding: theme.spacing(1),\r\n    background: '#A562C9',\r\n    color: '#ffffff',\r\n  },\r\n  userInfo: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  currentActivity: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport const HomeDrawer = (props: HomeDrawerProps) => {\r\n  const { user, isOpen, onClose } = props;\r\n  const classes = useStyles();\r\n  const [userState, setUserState] = React.useState<User>();\r\n\r\n  React.useEffect(() => {\r\n    setUserState(user ?? {});\r\n  }, [user]);\r\n\r\n  return (\r\n    <Drawer anchor={'right'} open={isOpen}>\r\n      <Grid className={classes.drawer} container direction={'column'}>\r\n        <Grid item container direction=\"row\" justify=\"space-between\" alignItems=\"center\" className={classes.userInfo}>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle2\">Your Information</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={onClose}>\r\n              <CancelOutlinedIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"row\" spacing={3}>\r\n          <Grid item>\r\n            <Avatar />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>User ID</Typography>\r\n            <Typography>User Name</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider light variant=\"fullWidth\" />\r\n        <Grid item className={classes.currentActivity}>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            Current Activity\r\n          </Typography>\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <Card>\r\n                <CardContent>User Name has been joined Rise of Memo</CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item>\r\n              <Card>\r\n                <CardContent>User Name added new memo in Todo</CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item>\r\n              <Card>\r\n                <CardContent>User Name deleted new memo in Todo</CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Drawer>\r\n  );\r\n};\r\n","import { Breadcrumbs } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport interface CustomBreadcrumbsProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const CustomBreadcrumbs = ({ children }: CustomBreadcrumbsProps) => {\r\n  return <Breadcrumbs aria-label=\"breadcrumb\">{children}</Breadcrumbs>;\r\n};\r\n","import { Chip, Theme, withStyles } from '@material-ui/core';\r\nimport React, { ReactElement } from 'react';\r\n\r\nexport interface CustomChipProps {\r\n  label: string;\r\n  onClick: () => void;\r\n  icon: ReactElement;\r\n}\r\n\r\nconst CustomChipElement = withStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    padding: 15,\r\n    margin: 8,\r\n    color: theme.palette.text.primary,\r\n  },\r\n}))(Chip) as typeof Chip;\r\n\r\nexport const CustomChip = ({ label, onClick, icon }: CustomChipProps) => {\r\n  return <CustomChipElement label={label} icon={icon} onClick={onClick} />;\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { CustomBreadcrumbs } from '../Atoms/CustomBreadcrumbs';\r\nimport { CustomChip } from '../Atoms/CustomChip';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\ninterface MenuProps {}\r\n\r\nexport const Menu = (props: MenuProps) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <CustomBreadcrumbs>\r\n      <Link to={'/'} style={{ textDecoration: 'none' }}>\r\n        <CustomChip label={'Home'} icon={<HomeIcon className={classes.icon} />} onClick={() => {}} />\r\n      </Link>\r\n      <Link to={'/Calender'} style={{ textDecoration: 'none' }}>\r\n        <CustomChip label={'Calender'} icon={<ViewListIcon className={classes.icon} />} onClick={() => {}} />\r\n      </Link>\r\n      <Link to={'/board'} style={{ textDecoration: 'none' }}>\r\n        <CustomChip label={'Board'} icon={<DashboardIcon className={classes.icon} />} onClick={() => {}} />\r\n      </Link>\r\n    </CustomBreadcrumbs>\r\n  );\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { DrawerMenu } from '../Atoms/DrawerMenu';\r\nimport { HomeDrawer } from './HomeDrawer';\r\nimport { Menu } from '../Molecules/Menu';\r\n\r\nexport interface HeaderProps {}\r\n\r\nexport const Header = () => {\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  const onClose = React.useCallback(() => {\r\n    setOpen(false);\r\n  }, [setOpen]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container justify=\"center\">\r\n        <Menu />\r\n      </Grid>\r\n      <DrawerMenu onClick={() => setOpen(true)} />\r\n      <HomeDrawer isOpen={open} onClose={onClose} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Header } from '../Organisms/Header';\r\n\r\nexport const Template: React.FC = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      {props.children}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { tempData } from './types/board/board';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Calender } from './components/Organisms/Calender';\r\nimport { GraphWidget } from './components/Molecules/GraphWidget';\r\nimport { HomeCardList } from './components/Organisms/HomeCardList';\r\nimport { DroppableBoard } from './components/Organisms/DroppableBoard';\r\nimport { Template } from './components/Template/Template';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Template>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <GraphWidget />\r\n                <HomeCardList />\r\n              </Grid>\r\n            </Template>\r\n          </Route>\r\n          <Route exact path=\"/calender\">\r\n            <Template>\r\n              <Calender />\r\n            </Template>\r\n          </Route>\r\n          <Route path=\"/board\">\r\n            <Template>\r\n              <DroppableBoard board={tempData} />\r\n            </Template>\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Grid>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { MuiPickersOverrides } from '@material-ui/pickers/typings/overrides';\r\n\r\nexport const defaultTheme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#ede7f6',\r\n      paper: '#ffffff',\r\n    },\r\n    primary: {\r\n      main: '#A55BCE',\r\n      light: '#dfc4ed',\r\n      dark: '#6a1b9a',\r\n    },\r\n    text: {\r\n      primary: '#ffffff',\r\n      secondary: '#6a1b9a',\r\n      hint: '#A024DA',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiPickersCalendarHeader: {\r\n      switchHeader: {\r\n        color: '#A024DA',\r\n      },\r\n    },\r\n    MuiPickersDay: {\r\n      day: {\r\n        color: '#A024DA',\r\n      },\r\n      dayDisabled: {\r\n        color: '#A024DA',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ntype overridesNameToClassKey = {\r\n  [P in keyof MuiPickersOverrides]: keyof MuiPickersOverrides[P];\r\n};\r\n\r\ndeclare module '@material-ui/core/styles/overrides' {\r\n  export interface ComponentNameToClassKey extends overridesNameToClassKey {}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core';\r\nimport { defaultTheme } from './types/theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={defaultTheme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}